{"version":3,"sources":["generateInlineStyle.ts"],"names":["generateInlineStyle","fontFace","dedent","fontFamily","fontStyle","fontWeight","extractSourceString","fontName","remoteUrl","url","format"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;;;;;;;AAEO,SAASA,mBAAT,CAA6BC,QAA7B,EAAiD;AACtD,aAAOC,iBAAP,4NAEoBD,QAAQ,CAACE,UAF7B,EAGkBF,QAAQ,CAACG,SAH3B,EAImBH,QAAQ,CAACI,UAJ5B,EAMWC,mBAAmB,CAACL,QAAD,CAN9B;AAQD;;AAED,SAASK,mBAAT,CAA6BL,QAA7B,EAAiD;AAC/C,QAAMM,QAAQ,GAAG,wCAAiBN,QAAjB,CAAjB;AACA,QAAMO,SAAS,GAAG,8CAAoBP,QAApB,CAAlB;;AACA,MAAIO,SAAJ,EAAe;AACb,4BAAiBP,QAAQ,CAACE,UAA1B,wBAAkDI,QAAlD,qBAAqEC,SAAS,CAACC,GAA/E,uBAA+FD,SAAS,CAACE,MAAzG;AACD,GAFD,MAEO;AACL,4BAAiBT,QAAQ,CAACE,UAA1B,wBAAkDI,QAAlD;AACD;AACF","sourcesContent":["import dedent from 'ts-dedent';\nimport { FontFace } from '../types/FontFace';\nimport { getExpoFontMapEntry } from './getExpoFontMapEntry';\nimport { getLocalFontName } from './getLocalFontName';\n\nexport function generateInlineStyle(fontFace: FontFace) {\n  return dedent`\n    @font-face {\n      font-family: '${fontFace.fontFamily}';\n      font-style: ${fontFace.fontStyle};\n      font-weight: ${fontFace.fontWeight};\n      font-display: auto;\n      src: ${extractSourceString(fontFace)};\n    }`;\n}\n\nfunction extractSourceString(fontFace: FontFace) {\n  const fontName = getLocalFontName(fontFace);\n  const remoteUrl = getExpoFontMapEntry(fontFace);\n  if (remoteUrl) {\n    return `local('${fontFace.fontFamily}'), local('${fontName}'), url(${remoteUrl.url}) format('${remoteUrl.format}')`;\n  } else {\n    return `local('${fontFace.fontFamily}'), local('${fontName}');`;\n  }\n}\n"]}