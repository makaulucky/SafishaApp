{"version":3,"sources":["getLocalFontName.ts"],"names":["getLocalFontName","fontFace","source","src","type","name","Error","fontFamily","fontWeight","fontStyle"],"mappings":";;;;;;;AACA;;AAEO,SAASA,gBAAT,CAA0BC,QAA1B,EAA8C;AACnD,OAAK,MAAMC,MAAX,IAAqB,oCAAeD,QAAQ,CAACE,GAAxB,CAArB,EAAmD;AACjD,QAAID,MAAM,CAACE,IAAP,KAAgB,OAApB,EAA6B;AAC3B,aAAOF,MAAM,CAACG,IAAd;AACD;AACF;;AACD,QAAM,IAAIC,KAAJ,8BACkBL,QAAQ,CAACM,UAD3B,cACyCN,QAAQ,CAACO,UADlD,cACgEP,QAAQ,CAACQ,SADzE,kDAAN;AAGD","sourcesContent":["import { FontFace } from '../types/FontFace';\nimport { explodeToArray } from './explodeToArray';\n\nexport function getLocalFontName(fontFace: FontFace) {\n  for (const source of explodeToArray(fontFace.src)) {\n    if (source.type === 'local') {\n      return source.name;\n    }\n  }\n  throw new Error(\n    `Invalid font face: ${fontFace.fontFamily}@${fontFace.fontWeight},${fontFace.fontStyle} (missing required 'local()' entry in 'src')`\n  );\n}\n"]}