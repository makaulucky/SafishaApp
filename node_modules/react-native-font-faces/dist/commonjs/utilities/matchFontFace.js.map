{"version":3,"sources":["matchFontFace.ts"],"names":["stableSort","array","compareFns","reduce","final","compareFn","map","item","index","sort","a","b","matchFontFace","fontFaces","textStyle","filter","ff","filterFontFamilyincludes","compareFontWeightDistance","compareFontStyleExactMatch","compareFontFamilyStartsWith","find","fontFamilyIncludes","fontFamily","aDistance","fontWeightDistance","fontWeight","bDistance","aMatches","fontStyleMatches","fontStyle","bMatches","fontFamilyStartsWith","fontFace","desiredFontStyle","desiredFontWeight","d","Math","abs","desiredFontFamily","includes","startsWith"],"mappings":"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","sourcesContent":["import { TextStyle } from 'react-native';\nimport { FontFace } from '../types/FontFace';\nimport { FontStyle } from '../types/FontStyle';\nimport { FontWeight } from '../types/FontWeight';\nimport { normalizeFontWeight } from './normalizeFontWeight';\n\n/**\n * The Hermes JS engine does not do a stable sort: https://github.com/facebook/hermes/issues/212\n */\nexport function stableSort<T>(array: T[], ...compareFns: Array<(a: T, b: T) => number>) {\n  return compareFns.reduce((final, compareFn) => {\n    return final\n      .map((item, index) => ({ item, index }))\n      .sort((a, b) => compareFn(a.item, b.item) || a.index - b.index)\n      .map(({ item }) => item)\n  }, array);\n}\n\n/**\n * Uses a font matching algorithm to choose from the list of given font faces,\n * the most appropriate font face (if any) to use for the given text style.\n *\n * @see https://www.w3.org/TR/CSS2/fonts.html\n */\nexport function matchFontFace(fontFaces: FontFace[], textStyle: TextStyle): FontFace | undefined {\n  return stableSort(\n    fontFaces.filter(ff => filterFontFamilyincludes(ff, textStyle)),\n    (a, b) => compareFontWeightDistance(a, b, textStyle),\n    (a, b) => compareFontStyleExactMatch(a, b, textStyle),\n    (a, b) => compareFontFamilyStartsWith(a, b, textStyle)\n  ).find(() => true)\n}\n\nfunction filterFontFamilyincludes(ff: FontFace, textStyle: TextStyle): boolean {\n  return fontFamilyIncludes(ff, textStyle.fontFamily);\n}\n\nexport function compareFontWeightDistance(a: FontFace, b: FontFace, textStyle: TextStyle): number {\n  const aDistance = fontWeightDistance(a, textStyle.fontWeight);\n  const bDistance = fontWeightDistance(b, textStyle.fontWeight);\n  if (aDistance === bDistance) return 0;\n  else if (aDistance < bDistance) return -1;\n  else if (aDistance > bDistance) return 1;\n  else return 0;\n}\n\nfunction compareFontStyleExactMatch(a: FontFace, b: FontFace, textStyle: TextStyle): number {\n  const aMatches = fontStyleMatches(a, textStyle.fontStyle);\n  const bMatches = fontStyleMatches(b, textStyle.fontStyle);\n  if (aMatches && bMatches) return 0;\n  else if (aMatches) return -1;\n  else if (bMatches) return 1;\n  else return 0;\n}\n\nfunction compareFontFamilyStartsWith(a: FontFace, b: FontFace, textStyle: TextStyle): number {\n  const aMatches = fontFamilyStartsWith(a, textStyle.fontFamily);\n  const bMatches = fontFamilyStartsWith(b, textStyle.fontFamily);\n  if (aMatches && bMatches) return 0;\n  else if (aMatches) return -1;\n  else if (bMatches) return 1;\n  else return 0;\n}\n\nfunction fontStyleMatches(fontFace: FontFace, desiredFontStyle: FontStyle = 'normal'): boolean {\n  return desiredFontStyle === fontFace.fontStyle;\n}\n\nfunction fontWeightDistance(fontFace: FontFace, desiredFontWeight: FontWeight = 'normal'): number {\n  const a = normalizeFontWeight(desiredFontWeight);\n  const b = normalizeFontWeight(fontFace.fontWeight);\n  const d = Math.abs(a - b);\n  if (a < 400 && b < a) return d - 1;\n  else if (a > 500 && b > a) return d - 1;\n  else if (a === 400 && b === 500) return d - 1;\n  else if (a === 500 && b === 400) return d - 1;\n  else return d;\n}\n\nfunction fontFamilyIncludes(fontFace: FontFace, desiredFontFamily: string = ''): boolean {\n  return desiredFontFamily.includes(fontFace.fontFamily);\n}\n\nfunction fontFamilyStartsWith(fontFace: FontFace, desiredFontFamily: string = ''): boolean {\n  return desiredFontFamily.startsWith(fontFace.fontFamily);\n}\n"]}