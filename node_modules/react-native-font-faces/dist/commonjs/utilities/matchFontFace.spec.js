"use strict";

var _matchFontFace = require("./matchFontFace");

var _Roboto = require("../samples/Roboto");

describe('matchFontFace', () => {
  it('should not find a match for empty input', () => {
    expect((0, _matchFontFace.matchFontFace)(_Roboto.Roboto_All, {})).toBeUndefined();
  });
  it('should not find a match for font family San Francisco', () => {
    expect((0, _matchFontFace.matchFontFace)(_Roboto.Roboto_All, {
      fontFamily: 'San Francisco'
    })).toBeUndefined();
  });
  it('should match Roboto_Thin for font family Roboto', () => {
    expect((0, _matchFontFace.matchFontFace)(_Roboto.Roboto_All, {
      fontFamily: 'Roboto'
    })).toEqual(_Roboto.Roboto_Regular);
  });
  it('should match Roboto_Thin for font weight 100', () => {
    expect((0, _matchFontFace.matchFontFace)(_Roboto.Roboto_All, {
      fontFamily: 'Roboto',
      fontWeight: '100'
    })).toEqual(_Roboto.Roboto_Thin);
  });
  it('should match Roboto_Thin for font weight 200', () => {
    expect((0, _matchFontFace.matchFontFace)(_Roboto.Roboto_All, {
      fontFamily: 'Roboto',
      fontWeight: '200'
    })).toEqual(_Roboto.Roboto_Thin);
  });
  it('should match Roboto_Light for font weight 300', () => {
    expect((0, _matchFontFace.matchFontFace)(_Roboto.Roboto_All, {
      fontFamily: 'Roboto',
      fontWeight: '300'
    })).toEqual(_Roboto.Roboto_Light);
  });
  it('should match Roboto_Regular for font weight 400', () => {
    expect((0, _matchFontFace.matchFontFace)(_Roboto.Roboto_All, {
      fontFamily: 'Roboto',
      fontWeight: '400'
    })).toEqual(_Roboto.Roboto_Regular);
  });
  it('should match Roboto_Medium for font weight 500', () => {
    expect((0, _matchFontFace.matchFontFace)(_Roboto.Roboto_All, {
      fontFamily: 'Roboto',
      fontWeight: '500'
    })).toEqual(_Roboto.Roboto_Medium);
  });
  it('should match Roboto_Bold for font weight 600', () => {
    expect((0, _matchFontFace.matchFontFace)(_Roboto.Roboto_All, {
      fontFamily: 'Roboto',
      fontWeight: '600'
    })).toEqual(_Roboto.Roboto_Bold);
  });
  it('should match Roboto_Bold for font weight 700', () => {
    expect((0, _matchFontFace.matchFontFace)(_Roboto.Roboto_All, {
      fontFamily: 'Roboto',
      fontWeight: '700'
    })).toEqual(_Roboto.Roboto_Bold);
  });
  it('should match Roboto_Black for font weight 800', () => {
    expect((0, _matchFontFace.matchFontFace)(_Roboto.Roboto_All, {
      fontFamily: 'Roboto',
      fontWeight: '800'
    })).toEqual(_Roboto.Roboto_Black);
  });
  it('should match Roboto_Black for font weight 900', () => {
    expect((0, _matchFontFace.matchFontFace)(_Roboto.Roboto_All, {
      fontFamily: 'Roboto',
      fontWeight: '900'
    })).toEqual(_Roboto.Roboto_Black);
  });
  it('should match Roboto_Bold for font weight bold', () => {
    expect((0, _matchFontFace.matchFontFace)(_Roboto.Roboto_All, {
      fontFamily: 'Roboto',
      fontWeight: 'bold'
    })).toEqual(_Roboto.Roboto_Bold);
  });
  it('should match Roboto_Regular for font weight normal', () => {
    expect((0, _matchFontFace.matchFontFace)(_Roboto.Roboto_All, {
      fontFamily: 'Roboto',
      fontWeight: 'normal'
    })).toEqual(_Roboto.Roboto_Regular);
  });
  it('should match Roboto_ThinItalic for font weight 100 and font style italic', () => {
    expect((0, _matchFontFace.matchFontFace)(_Roboto.Roboto_All, {
      fontFamily: 'Roboto',
      fontWeight: '100',
      fontStyle: 'italic'
    })).toEqual(_Roboto.Roboto_ThinItalic);
  });
  it('should match Roboto_ThinItalic for font weight 200 and font style italic', () => {
    expect((0, _matchFontFace.matchFontFace)(_Roboto.Roboto_All, {
      fontFamily: 'Roboto',
      fontWeight: '200',
      fontStyle: 'italic'
    })).toEqual(_Roboto.Roboto_ThinItalic);
  });
  it('should match Roboto_LightItalic for font weight 300 and font style italic', () => {
    expect((0, _matchFontFace.matchFontFace)(_Roboto.Roboto_All, {
      fontFamily: 'Roboto',
      fontWeight: '300',
      fontStyle: 'italic'
    })).toEqual(_Roboto.Roboto_LightItalic);
  });
  it('should match Roboto_Italic for font weight 400 and font style italic', () => {
    expect((0, _matchFontFace.matchFontFace)(_Roboto.Roboto_All, {
      fontFamily: 'Roboto',
      fontWeight: '400',
      fontStyle: 'italic'
    })).toEqual(_Roboto.Roboto_Italic);
  });
  it('should match Roboto_MediumItalic for font weight 500 and font style italic', () => {
    expect((0, _matchFontFace.matchFontFace)(_Roboto.Roboto_All, {
      fontFamily: 'Roboto',
      fontWeight: '500',
      fontStyle: 'italic'
    })).toEqual(_Roboto.Roboto_MediumItalic);
  });
  it('should match Roboto_BoldItalic for font weight 600 and font style italic', () => {
    expect((0, _matchFontFace.matchFontFace)(_Roboto.Roboto_All, {
      fontFamily: 'Roboto',
      fontWeight: '600',
      fontStyle: 'italic'
    })).toEqual(_Roboto.Roboto_BoldItalic);
  });
  it('should match Roboto_BoldItalic for font weight 700 and font style italic', () => {
    expect((0, _matchFontFace.matchFontFace)(_Roboto.Roboto_All, {
      fontFamily: 'Roboto',
      fontWeight: '700',
      fontStyle: 'italic'
    })).toEqual(_Roboto.Roboto_BoldItalic);
  });
  it('should match Roboto_BlackItalic for font weight 800 and font style italic', () => {
    expect((0, _matchFontFace.matchFontFace)(_Roboto.Roboto_All, {
      fontFamily: 'Roboto',
      fontWeight: '800',
      fontStyle: 'italic'
    })).toEqual(_Roboto.Roboto_BlackItalic);
  });
  it('should match Roboto_BlackItalic for font weight 900 and font style italic', () => {
    expect((0, _matchFontFace.matchFontFace)(_Roboto.Roboto_All, {
      fontFamily: 'Roboto',
      fontWeight: '900',
      fontStyle: 'italic'
    })).toEqual(_Roboto.Roboto_BlackItalic);
  });
  it('should match Roboto_BoldItalic for font weight bold and font style italic', () => {
    expect((0, _matchFontFace.matchFontFace)(_Roboto.Roboto_All, {
      fontFamily: 'Roboto',
      fontWeight: 'bold',
      fontStyle: 'italic'
    })).toEqual(_Roboto.Roboto_BoldItalic);
  });
  it('should match Roboto_Italic for font weight normal and font style italic', () => {
    expect((0, _matchFontFace.matchFontFace)(_Roboto.Roboto_All, {
      fontFamily: 'Roboto',
      fontWeight: 'normal',
      fontStyle: 'italic'
    })).toEqual(_Roboto.Roboto_Italic);
  });
});
//# sourceMappingURL=matchFontFace.spec.js.map