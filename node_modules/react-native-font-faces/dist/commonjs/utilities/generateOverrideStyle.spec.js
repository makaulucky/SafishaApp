"use strict";

var _Roboto = require("../samples/Roboto");

var _generateOverrideStyle = require("./generateOverrideStyle");

describe('generateOverrideStyle', () => {
  it('should ignore the text style for non-matching font families', () => {
    const given = {
      fontFamily: 'San Francisco',
      fontWeight: 'bold',
      fontStyle: 'italic'
    };
    expect((0, _generateOverrideStyle.generateOverrideStyle)(_Roboto.Roboto_All, given)).toMatchInlineSnapshot("\n      Object {\n        \"fontFamily\": \"San Francisco\",\n        \"fontStyle\": \"italic\",\n        \"fontWeight\": \"bold\",\n      }\n    ");
  });
  it('should override the text style for matching font family', () => {
    const given = {
      fontFamily: 'Roboto'
    };
    expect((0, _generateOverrideStyle.generateOverrideStyle)(_Roboto.Roboto_All, given)).toMatchInlineSnapshot("\n      Object {\n        \"fontFamily\": \"Roboto-Regular\",\n        \"fontStyle\": undefined,\n        \"fontWeight\": undefined,\n      }\n    ");
  });
  it('should override the text style for matching font family and style', () => {
    const given = {
      fontFamily: 'Roboto',
      fontStyle: 'italic'
    };
    expect((0, _generateOverrideStyle.generateOverrideStyle)(_Roboto.Roboto_All, given)).toMatchInlineSnapshot("\n      Object {\n        \"fontFamily\": \"Roboto-Italic\",\n        \"fontStyle\": undefined,\n        \"fontWeight\": undefined,\n      }\n    ");
  });
  it('should override the text style for matching font family and weight', () => {
    const given = {
      fontFamily: 'Roboto',
      fontWeight: '100'
    };
    expect((0, _generateOverrideStyle.generateOverrideStyle)(_Roboto.Roboto_All, given)).toMatchInlineSnapshot("\n      Object {\n        \"fontFamily\": \"Roboto-Thin\",\n        \"fontStyle\": undefined,\n        \"fontWeight\": undefined,\n      }\n    ");
  });
  it('should override the text style for matching font family, weight, and style', () => {
    const given = {
      fontFamily: 'Roboto',
      fontWeight: 'bold',
      fontStyle: 'italic'
    };
    expect((0, _generateOverrideStyle.generateOverrideStyle)(_Roboto.Roboto_All, given)).toMatchInlineSnapshot("\n      Object {\n        \"fontFamily\": \"Roboto-BoldItalic\",\n        \"fontStyle\": undefined,\n        \"fontWeight\": undefined,\n      }\n    ");
  });
  it('should preserve other properties from the text style', () => {
    const given = {
      color: 'blue',
      fontFamily: 'Roboto',
      textDecorationLine: 'underline'
    };
    expect((0, _generateOverrideStyle.generateOverrideStyle)(_Roboto.Roboto_All, given)).toMatchInlineSnapshot("\n      Object {\n        \"color\": \"blue\",\n        \"fontFamily\": \"Roboto-Regular\",\n        \"fontStyle\": undefined,\n        \"fontWeight\": undefined,\n        \"textDecorationLine\": \"underline\",\n      }\n    ");
  });
});
//# sourceMappingURL=generateOverrideStyle.spec.js.map