"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.overrideTextRenderFn = overrideTextRenderFn;

var _react = _interopRequireDefault(require("react"));

var _globalFontFaces = require("./globalFontFaces");

var _generateOverrideStyle = require("./generateOverrideStyle");

var _reactNative = require("react-native");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const originalRenderFn = _reactNative.Text.render;

function overrideTextRenderFn() {
  class FontManager {
    applyOverrides() {
      _reactNative.Text.render = this.overrideRenderFn;
    }

    overrideRenderFn(...args) {
      const element = originalRenderFn.call(this, ...args);
      const fontFaces = Object.values(_globalFontFaces.globalFontFaces);

      const originalStyle = _reactNative.StyleSheet.flatten([element.props.style]);

      const overrideStyle = (0, _generateOverrideStyle.generateOverrideStyle)(fontFaces, originalStyle);

      const flattenedStyle = _reactNative.StyleSheet.flatten([originalStyle, overrideStyle]);

      return /*#__PURE__*/_react.default.cloneElement(element, {
        style: flattenedStyle
      });
    }

  }

  new FontManager().applyOverrides();
}
//# sourceMappingURL=overrideTextRenderFn.js.map