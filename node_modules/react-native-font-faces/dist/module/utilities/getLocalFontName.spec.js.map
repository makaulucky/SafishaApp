{"version":3,"sources":["getLocalFontName.spec.ts"],"names":["Roboto_Regular","getLocalFontName","describe","it","expect","toEqual","src","toThrowErrorMatchingInlineSnapshot"],"mappings":"AAAA,SAASA,cAAT,QAA+B,mBAA/B;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AAEAC,QAAQ,CAAC,kBAAD,EAAqB,MAAM;AACjCC,EAAAA,EAAE,CAAC,4CAAD,EAA+C,MAAM;AACrDC,IAAAA,MAAM,CAACH,gBAAgB,CAACD,cAAD,CAAjB,CAAN,CAAyCK,OAAzC,CAAiD,gBAAjD;AACD,GAFC,CAAF;AAIAF,EAAAA,EAAE,CAAC,4CAAD,EAA+C,MAAM;AACrDC,IAAAA,MAAM,CAAC,MAAMH,gBAAgB,CAAC,EAAE,GAAGD,cAAL;AAAqBM,MAAAA,GAAG,EAAE;AAA1B,KAAD,CAAvB,CAAN,CAA+DC,kCAA/D;AAGD,GAJC,CAAF;AAKD,CAVO,CAAR","sourcesContent":["import { Roboto_Regular } from '../samples/Roboto';\nimport { getLocalFontName } from './getLocalFontName';\n\ndescribe('getLocalFontName', () => {\n  it('should correctly extract a local font name', () => {\n    expect(getLocalFontName(Roboto_Regular)).toEqual('Roboto-Regular');\n  });\n\n  it('should correctly extract a local font name', () => {\n    expect(() => getLocalFontName({ ...Roboto_Regular, src: [] })).toThrowErrorMatchingInlineSnapshot(\n      `\"Invalid font face: Roboto@400,normal (missing required 'local()' entry in 'src')\"`\n    );\n  });\n});\n"]}