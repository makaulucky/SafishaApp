{"version":3,"sources":["getDynamicFontListEntry.ts"],"names":["explodeToArray","getLocalFontName","getDynamicFontListEntry","fontFace","source","src","type","url","format","name","data","undefined"],"mappings":"AACA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AAGA,OAAO,SAASC,uBAAT,CAAiCC,QAAjC,EAAuF;AAC5F,OAAK,MAAMC,MAAX,IAAqBJ,cAAc,CAACG,QAAQ,CAACE,GAAV,CAAnC,EAAmD;AACjD,QAAID,MAAM,CAACE,IAAP,KAAgB,KAApB,EAA2B;AACzB,YAAM;AAAEC,QAAAA,GAAF;AAAOC,QAAAA;AAAP,UAAkBJ,MAAxB;AACA,YAAMK,IAAI,GAAGR,gBAAgB,CAACE,QAAD,CAA7B;AACA,YAAMO,IAAI,GAAGH,GAAb;AACA,YAAMD,IAAI,GAAGE,MAAM,KAAK,UAAX,GAAwB,KAAxB,GAAgCA,MAAM,KAAK,UAAX,GAAwB,KAAxB,GAAgCG,SAA7E;AACA,aAAO;AAAEF,QAAAA,IAAF;AAAQC,QAAAA,IAAR;AAAcJ,QAAAA;AAAd,OAAP;AACD;AACF;AACF","sourcesContent":["import { FontFace } from '../types/FontFace';\nimport { explodeToArray } from './explodeToArray';\nimport { getLocalFontName } from './getLocalFontName';\nimport { DynamicFontListEntry } from '../types/DynamicFontListEntry';\n\nexport function getDynamicFontListEntry(fontFace: FontFace): DynamicFontListEntry | undefined {\n  for (const source of explodeToArray(fontFace.src)) {\n    if (source.type === 'url') {\n      const { url, format } = source;\n      const name = getLocalFontName(fontFace);\n      const data = url;\n      const type = format === 'opentype' ? 'otf' : format === 'truetype' ? 'ttf' : undefined;\n      return { name, data, type };\n    }\n  }\n}\n"]}